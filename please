#!/usr/bin/env bash

_force_nixpkgs() {
    # without evaluating this all our queries will fail
    nix-build ./nixpkgs-fetch.nix >/dev/null
}

build() {
    echo "Building $1 ..."
    exit 0
}

install() {
    echo "Installing $1 ..."
    exit 0
}

shell() {
    echo "Opening development shell for $1 ..."
    exit 0
}

init() {
    echo "Initializing setup ..."
    exit 0
}

doctor() {
    echo "Running sanity checks ..."
    exit 0
}

list() {
    echo "Listing artifacts ..."
    exit 0
}

usage() {
    echo ""
    echo "Usage: please <build|install|shell|init|list|doctor> [args]"
    echo ""
    echo " build [artifact]    -- build an artifact"
    echo " install [artifact]  -- install an artifact"
    echo " shell [artifact]    -- enter a dev shell for an artifact"
    echo " init                -- configure initial setup"
    echo " list                -- list artifacts"
    echo " doctor              -- perform sanity checks"
    echo  ""
}

if [ -z "$1" ]; then
    usage
    exit 1
fi


subcommand="$1"
shift

case "$subcommand" in
    build)
        build "$@"
        ;;
    install)
        install "$@"
        ;;
    shell)
        shell "$@"
        ;;
    init)
        init "$@"
        ;;
    list)
        list "$@"
        ;;
    doctor)
        doctor "$@"
        ;;
esac
