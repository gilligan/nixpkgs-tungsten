#!/usr/bin/env bash

INSTALL_DRV=""

_list_attrs() {
    nix-instantiate --strict --eval --expr "import ./get-attrs.nix {}" | tr -d "[]\""
}

_force_nixpkgs() {
    # without evaluating this all our queries will fail
    nix-build ./nixpkgs-fetch.nix >/dev/null
}

build() {
    local pkg="$1"
    nix-build default.nix -A "$pkg"
}

install() {
    local pkg="$1"
    nix-env -f default.nix -iA "$pkg"
}

shell() {
    local pkg="$1"
    nix-shell default.nix -A "$pkg"
}

init() {
    echo "Initializing setup ..."
    exit 0
}

doctor() {
    echo "Running sanity checks ..."
    exit 0
}

list() {
    local args="$*"

    if [ -z "$args" ]; then
        _list_attrs | tr " " "\n"
    else
        _list_attrs | tr " " "\n" | grep "$args"
    fi
}

usage() {
    echo ""
    echo "Usage: please <build|install|shell|init|list|doctor> [args]"
    echo ""
    echo " build [artifact]    -- build an artifact"
    echo " install [artifact]  -- install an artifact"
    echo " shell [artifact]    -- enter a dev shell for an artifact"
    echo " init                -- configure initial setup"
    echo " list                -- list artifacts"
    echo " doctor              -- perform sanity checks"
    echo  ""
}

_force_nixpkgs

if [ -z "$1" ]; then
    usage
    exit 1
fi


subcommand="$1"
shift

case "$subcommand" in
    build)
        build "$@"
        ;;
    install)
        install "$@"
        ;;
    shell)
        shell "$@"
        ;;
    init)
        init "$@"
        ;;
    list)
        list "$@"
        ;;
    doctor)
        doctor "$@"
        ;;
esac
